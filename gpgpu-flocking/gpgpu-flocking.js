(()=>{"use strict";var t={854:(t,e,r)=>{r.d(e,{Z:()=>o});var i=r(352),n=r.n(i)()((function(t){return t[1]}));n.push([t.id,"body {\r\n  margin: 0;\r\n}\r\n#viewport {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: block;\r\n}\r\n",""]);const o=n},352:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r=t(e);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(t,r,i){"string"==typeof t&&(t=[[null,t,""]]);var n={};if(i)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(n[a]=!0)}for(var s=0;s<t.length;s++){var u=[].concat(t[s]);i&&n[u[0]]||(r&&(u[2]?u[2]="".concat(r," and ").concat(u[2]):u[2]=r),e.push(u))}},e}},701:(t,e,r)=>{var i,n=function(){var t={};return function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}t[e]=r}return t[e]}}(),o=[];function a(t){for(var e=-1,r=0;r<o.length;r++)if(o[r].identifier===t){e=r;break}return e}function s(t,e){for(var r={},i=[],n=0;n<t.length;n++){var s=t[n],u=e.base?s[0]+e.base:s[0],c=r[u]||0,l="".concat(u," ").concat(c);r[u]=c+1;var f=a(l),h={css:s[1],media:s[2],sourceMap:s[3]};-1!==f?(o[f].references++,o[f].updater(h)):o.push({identifier:l,updater:x(h,e),references:1}),i.push(l)}return i}function u(t){var e=document.createElement("style"),i=t.attributes||{};if(void 0===i.nonce){var o=r.nc;o&&(i.nonce=o)}if(Object.keys(i).forEach((function(t){e.setAttribute(t,i[t])})),"function"==typeof t.insert)t.insert(e);else{var a=n(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var c,l=(c=[],function(t,e){return c[t]=e,c.filter(Boolean).join("\n")});function f(t,e,r,i){var n=r?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(t.styleSheet)t.styleSheet.cssText=l(e,n);else{var o=document.createTextNode(n),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}function h(t,e,r){var i=r.css,n=r.media,o=r.sourceMap;if(n?t.setAttribute("media",n):t.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var d=null,m=0;function x(t,e){var r,i,n;if(e.singleton){var o=m++;r=d||(d=u(e)),i=f.bind(null,r,o,!1),n=f.bind(null,r,o,!0)}else r=u(e),i=h.bind(null,r,e),n=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(r)};return i(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;i(t=e)}else n()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i));var r=s(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var i=0;i<r.length;i++){var n=a(r[i]);o[n].references--}for(var u=s(t,e),c=0;c<r.length;c++){var l=a(r[c]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}r=u}}}}},e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={id:i,exports:{}};return t[i](n,n.exports,r),n.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t=r(701),e=r.n(t),i=r(854);e()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;const n="attribute vec3 position;\r\nattribute vec2 textureCoord;\r\n\r\nvarying highp vec2 vTextureCoord;\r\n\r\nvoid main(){\r\n  gl_Position = vec4(position, 1.0);\r\n  vTextureCoord = textureCoord;\r\n}";function o(t,e,r){let i=t.createShader(e);if(t.shaderSource(i,r),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS))return i;throw"shader creation failed: "+t.getShaderInfoLog(i)}function a(t,e,r){let i=t.createProgram(),n=o(t,t.VERTEX_SHADER,e),a=o(t,t.FRAGMENT_SHADER,r);if(t.attachShader(i,n),t.attachShader(i,a),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS))return t.deleteShader(n),t.deleteShader(a),i;throw"program creation failed: "+t.getProgramInfoLog(i)}function s(t,e){let r=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,r),t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW),r}class u{constructor(t,e,r,i){this.gl=t,this.textureWidth=e,this.textureHeight=r,this.dt=i}createPositionProgram(t,e){let r,i=this.gl,o=this.getDefaultAttributeData(),u={program:null,attributes:{},uniforms:{},framebuffers:new Array(2),textures:new Array(2),buffer:s(i,o),index:0};return u.program=a(i,n,t),r=i.getAttribLocation(u.program,"position"),i.enableVertexAttribArray(r),u.attributes.positionLoc=r,r=i.getAttribLocation(u.program,"textureCoord"),i.enableVertexAttribArray(r),u.attributes.textureCoordLoc=r,r=i.getUniformLocation(u.program,"dt"),u.uniforms.dtLoc=r,r=i.getUniformLocation(u.program,"texturePosition"),u.uniforms.texturePositionLoc=r,r=i.getUniformLocation(u.program,"textureVelocity"),u.uniforms.textureVelocityLoc=r,this.createTexturesAndFramebuffers(u,e),this.positionProgram=u,u}createVelocityProgram(t,e){let r,i=this.gl,o=this.getDefaultAttributeData(),u={program:null,attributes:{},uniforms:{},framebuffers:new Array(2),textures:new Array(2),buffer:s(i,o),index:0};return u.program=a(i,n,t),r=i.getAttribLocation(u.program,"position"),i.enableVertexAttribArray(r),u.attributes.positionLoc=r,r=i.getAttribLocation(u.program,"textureCoord"),i.enableVertexAttribArray(r),u.attributes.textureCoordLoc=r,r=i.getUniformLocation(u.program,"dt"),u.uniforms.dtLoc=r,r=i.getUniformLocation(u.program,"texturePosition"),u.uniforms.texturePositionLoc=r,r=i.getUniformLocation(u.program,"textureVelocity"),u.uniforms.textureVelocityLoc=r,this.createTexturesAndFramebuffers(u,e),this.velocityProgram=u,u}run(){this.gl.viewport(0,0,this.textureWidth,this.textureHeight),this.runPosition(),this.runVelocity()}runPosition(){let t=this.gl,e=this.positionProgram;t.bindBuffer(t.ARRAY_BUFFER,e.buffer),t.useProgram(e.program),t.bindFramebuffer(t.FRAMEBUFFER,e.framebuffers[e.index]),e.index=(e.index+1)%2;let r=e.attributes;t.vertexAttribPointer(r.positionLoc,3,t.FLOAT,null,20,0),t.vertexAttribPointer(r.textureCoordLoc,2,t.FLOAT,null,20,12),t.uniform1f(e.uniforms.dtLoc,this.dt),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e.textures[e.index]),t.uniform1i(e.uniforms.texturePositionLoc,0);let i=this.velocityProgram;t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,i.textures[i.index]),t.uniform1i(e.uniforms.textureVelocityLoc,1),t.drawArrays(t.TRIANGLE_STRIP,0,4)}runVelocity(){let t=this.gl,e=this.velocityProgram;t.bindBuffer(t.ARRAY_BUFFER,e.buffer),t.useProgram(e.program),t.bindFramebuffer(t.FRAMEBUFFER,e.framebuffers[e.index]),e.index=(e.index+1)%2;let r=e.attributes;t.vertexAttribPointer(r.positionLoc,3,t.FLOAT,null,20,0),t.vertexAttribPointer(r.textureCoordLoc,2,t.FLOAT,null,20,12),t.uniform1f(e.uniforms.dtLoc,this.dt),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e.textures[e.index]),t.uniform1i(e.uniforms.textureVelocityLoc,0);let i=this.positionProgram;t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,i.textures[i.index]),t.uniform1i(e.uniforms.texturePositionLoc,1),t.drawArrays(t.TRIANGLE_STRIP,0,4)}createTexturesAndFramebuffers(t,e){let r=this.gl;t.textures[0]=this.createTexture(r.FLOAT,null),t.textures[1]=this.createTexture(r.FLOAT,e),t.framebuffers[0]=this.createFramebuffer(t.textures[0]),t.framebuffers[1]=this.createFramebuffer(t.textures[1])}createTexture(t,e){let r=this.gl,i=r.createTexture();r.bindTexture(r.TEXTURE_2D,i),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE);let n=r.TEXTURE_2D,o=r.RGBA,a=r.RGBA;return r.texImage2D(n,0,o,this.textureWidth,this.textureHeight,0,a,t,e),r.bindTexture(r.TEXTURE_2D,null),i}createFramebuffer(t){let e=this.gl,r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r);let i=e.FRAMEBUFFER,n=e.COLOR_ATTACHMENT0,o=e.TEXTURE_2D;return e.framebufferTexture2D(i,n,o,t,0),r}getDefaultAttributeData(){return new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])}readPositionTexture(t,e){return this.readTexture(t,e,this.positionProgram)}readVelocityTexture(t,e){return this.readTexture(t,e,this.velocityProgram)}readTexture(t,e,r){let i=this.gl,n=(r.index+1)%2;i.bindFramebuffer(i.FRAMEBUFFER,r.framebuffers[n]);let o=new Float32Array(4);return i.readPixels(t,e,1,1,i.RGBA,i.FLOAT,o),o}}let c=Float32Array;function l(t,e,r){const i=new c(3);return t&&(i[0]=t),e&&(i[1]=e),r&&(i[2]=r),i}function f(t,e,r){r=r||new c(3);const i=t[2]*e[0]-t[0]*e[2],n=t[0]*e[1]-t[1]*e[0];return r[0]=t[1]*e[2]-t[2]*e[1],r[1]=i,r[2]=n,r}function h(t,e){e=e||new c(3);const r=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=Math.sqrt(r);return i>1e-5?(e[0]=t[0]/i,e[1]=t[1]/i,e[2]=t[2]/i):(e[0]=0,e[1]=0,e[2]=0),e}let d,m,x,g=Float32Array;class v{constructor(t,e,r){this.gl=t,this.width=t.canvas.clientWidth,this.height=t.canvas.clientHeight,this.textureWidth=e,this.textureHeight=r,this.viewProjectionMatrix=this.computeViewProjectionMatrix(),t.clearColor(.1,.1,.12,1)}setPostionAndVelocityProgram(t,e){this.positionProgram=t,this.velocityProgram=e}createVisualizationProgram(){let t=this.gl,e=this.getVisualizationAttributeData();this.attributes={},this.uniforms={},this.buffer=s(t,e),this.program=a(t,"attribute vec3 position;\r\nattribute vec2 reference;\r\n\r\nuniform mat4 viewProjectionMatrix;\r\nuniform sampler2D texturePosition;\r\nuniform sampler2D textureVelocity;\r\n\r\nmat3 lookAlongVectorMatrix(vec3 direction) {\r\n    vec3 up = vec3(0.0, 1.0, 0.0);\r\n    vec3 zAxis = normalize(direction);\r\n    vec3 xAxis = normalize(cross(zAxis, up));\r\n    vec3 yAxis = normalize(cross(xAxis, zAxis));\r\n\r\n    return mat3(xAxis, yAxis, zAxis);\r\n}\r\n\r\nvoid main() {\r\n    vec3 pos = texture2D( texturePosition, reference ).xyz;\r\n    vec3 vel = texture2D( textureVelocity, reference ).xyz;\r\n    \r\n    mat3 rotationMatrix = lookAlongVectorMatrix(vel);\r\n    vec3 rotPosition =  rotationMatrix * position;\r\n\r\n    vec4 worldPosition = vec4(rotPosition + pos, 1);\r\n    gl_Position = viewProjectionMatrix * worldPosition;\r\n}\r\n","void main() {\r\n  gl_FragColor = vec4( 0.6, 0.2, 0.2, 1. );\r\n}\r\n"),this.referenceLocation=t.getAttribLocation(this.program,"reference"),t.enableVertexAttribArray(this.referenceLocation),this.positionLocation=t.getAttribLocation(this.program,"position"),t.enableVertexAttribArray(this.positionLocation),this.viewProjectionMatrixLocation=t.getUniformLocation(this.program,"viewProjectionMatrix"),this.texturePositionLocation=t.getUniformLocation(this.program,"texturePosition"),this.textureVelocityLocation=t.getUniformLocation(this.program,"textureVelocity")}run(){this.runVisualization()}runVisualization(){let t,e=this.gl;this.resizeCanvas(),e.viewport(0,0,this.width,this.height),e.bindBuffer(e.ARRAY_BUFFER,this.buffer),e.useProgram(this.program),e.bindFramebuffer(e.FRAMEBUFFER,null),e.clear(e.COLOR_BUFFER_BIT),e.vertexAttribPointer(this.positionLocation,3,e.FLOAT,null,20,0),e.vertexAttribPointer(this.referenceLocation,2,e.FLOAT,null,20,12),e.uniformMatrix4fv(this.viewProjectionMatrixLocation,!1,this.viewProjectionMatrix),t=this.positionProgram,e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t.textures[t.index]),e.uniform1i(this.texturePositionLocation,0),t=this.velocityProgram,e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t.textures[t.index]),e.uniform1i(this.textureVelocityLocation,1),e.drawArrays(e.TRIANGLES,0,6144)}computeViewProjectionMatrix(){let t=this.gl,e=t.canvas.clientWidth/t.canvas.clientHeight;return function(t,e,r){r=r||new g(16);const i=t[0],n=t[1],o=t[2],a=t[3],s=t[4],u=t[5],c=t[6],l=t[7],f=t[8],h=t[9],d=t[10],m=t[11],x=t[12],v=t[13],p=t[14],T=t[15],A=e[0],b=e[1],y=e[2],E=e[3],P=e[4],R=e[5],L=e[6],F=e[7],D=e[8],w=e[9],_=e[10],S=e[11],C=e[12],U=e[13],V=e[14],M=e[15];return r[0]=i*A+s*b+f*y+x*E,r[1]=n*A+u*b+h*y+v*E,r[2]=o*A+c*b+d*y+p*E,r[3]=a*A+l*b+m*y+T*E,r[4]=i*P+s*R+f*L+x*F,r[5]=n*P+u*R+h*L+v*F,r[6]=o*P+c*R+d*L+p*F,r[7]=a*P+l*R+m*L+T*F,r[8]=i*D+s*w+f*_+x*S,r[9]=n*D+u*w+h*_+v*S,r[10]=o*D+c*w+d*_+p*S,r[11]=a*D+l*w+m*_+T*S,r[12]=i*C+s*U+f*V+x*M,r[13]=n*C+u*U+h*V+v*M,r[14]=o*C+c*U+d*V+p*M,r[15]=a*C+l*U+m*V+T*M,r}(function(t,e,r,i,n){n=n||new g(16);const o=Math.tan(.5*Math.PI-.5*t),a=1/-1999;return n[0]=o/e,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=o,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=2001*a,n[11]=-1,n[12]=0,n[13]=0,n[14]=2e3*a*2,n[15]=0,n}(90*Math.PI/360,e),function(t,e){e=e||new g(16);const r=t[0],i=t[1],n=t[2],o=t[3],a=t[4],s=t[5],u=t[6],c=t[7],l=t[8],f=t[9],h=t[10],d=t[11],m=t[12],x=t[13],v=t[14],p=t[15],T=h*p,A=v*d,b=u*p,y=v*c,E=u*d,P=h*c,R=n*p,L=v*o,F=n*d,D=h*o,w=n*c,_=u*o,S=l*x,C=m*f,U=a*x,V=m*s,M=a*f,O=l*s,z=r*x,I=m*i,B=r*f,X=l*i,H=r*s,N=a*i,j=T*s+y*f+E*x-(A*s+b*f+P*x),G=A*i+R*f+D*x-(T*i+L*f+F*x),q=b*i+L*s+w*x-(y*i+R*s+_*x),W=P*i+F*s+_*f-(E*i+D*s+w*f),k=1/(r*j+a*G+l*q+m*W);return e[0]=k*j,e[1]=k*G,e[2]=k*q,e[3]=k*W,e[4]=k*(A*a+b*l+P*m-(T*a+y*l+E*m)),e[5]=k*(T*r+L*l+F*m-(A*r+R*l+D*m)),e[6]=k*(y*r+R*a+_*m-(b*r+L*a+w*m)),e[7]=k*(E*r+D*a+w*l-(P*r+F*a+_*l)),e[8]=k*(S*c+V*d+M*p-(C*c+U*d+O*p)),e[9]=k*(C*o+z*d+X*p-(S*o+I*d+B*p)),e[10]=k*(U*o+I*c+H*p-(V*o+z*c+N*p)),e[11]=k*(O*o+B*c+N*d-(M*o+X*c+H*d)),e[12]=k*(U*h+O*v+C*u-(M*v+S*u+V*h)),e[13]=k*(B*v+S*n+I*h-(z*h+X*v+C*n)),e[14]=k*(z*u+N*v+V*n-(H*v+U*n+I*u)),e[15]=k*(H*h+M*n+X*u-(B*u+N*h+O*n)),e}((r=[-12,0,0],i=[0,0,0],n=[0,1,0],o=o||new g(16),d=d||l(),m=m||l(),x=x||l(),h(function(t,e,r){return(r=r||new c(3))[0]=t[0]-e[0],r[1]=t[1]-e[1],r[2]=t[2]-e[2],r}(r,i,x),x),h(f(n,x,d),d),h(f(x,d,m),m),o[0]=d[0],o[1]=d[1],o[2]=d[2],o[3]=0,o[4]=m[0],o[5]=m[1],o[6]=m[2],o[7]=0,o[8]=x[0],o[9]=x[1],o[10]=x[2],o[11]=0,o[12]=r[0],o[13]=r[1],o[14]=r[2],o[15]=1,o)));var r,i,n,o}resizeCanvas(){let t=this.gl.canvas;this.width=t.clientWidth,this.height=t.clientHeight,t.width==this.width&&t.height==this.height||(t.width=this.width,t.height=this.height)}getVisualizationAttributeData(){let t=[];for(let e=0;e<this.textureWidth;e++)for(let r=0;r<this.textureHeight;r++){let i=e/this.textureHeight,n=r/this.textureHeight;t.push(0,0,.05),t.push(i,n),t.push(0,.025,-.05),t.push(i,n),t.push(0,-.025,-.05),t.push(i,n),t.push(0,0,.05),t.push(i,n),t.push(.025,0,-.05),t.push(i,n),t.push(-.025,0,-.05),t.push(i,n)}return new Float32Array(t)}}!function(){let t=document.getElementById("viewport").getContext("webgl",{premultipliedAlpha:!1});t.getExtension("OES_texture_float"),t.getExtension("WEBGL_color_buffer_float");let e=new u(t,32,32,.01),r=new v(t,32,32),i=new Float32Array(4096),n=new Float32Array(4096);i=i.map((()=>Math.random()-.5)),n=n.map((()=>Math.random()-.5));let o=e.createPositionProgram("#ifdef GL_FRAGMENT_PRECISION_HIGH\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform float dt;\r\nuniform sampler2D texturePosition;\r\nuniform sampler2D textureVelocity;\r\nvarying vec2 vTextureCoord;\r\n\r\nvoid main()\t{\r\n    vec3 position = texture2D( texturePosition, vTextureCoord ).xyz;\r\n    vec3 velocity = texture2D( textureVelocity, vTextureCoord ).xyz;\r\n    gl_FragColor = vec4( position + velocity * dt, 1. );\r\n}",i),a=e.createVelocityProgram("#ifdef GL_FRAGMENT_PRECISION_HIGH\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\nuniform float dt;\r\nuniform sampler2D texturePosition;\r\nuniform sampler2D textureVelocity;\r\nvarying vec2 vTextureCoord;\r\n\r\nconst vec2 textureSize = vec2(32., 32.);\r\n\r\nconst float cohesionStrength = 0.6;\r\nconst float alignmentStrength = 1.2;\r\nconst float separationStrength = 0.07;\r\n\r\nconst float cohesionDistance = 6.;\r\nconst float alignmentDistance = 3.;\r\nconst float separationDistance = 1.5;\r\n\r\nconst float cohesionDistanceSquared = cohesionDistance * cohesionDistance;\r\nconst float alignmentDistanceSquared = alignmentDistance * alignmentDistance;\r\nconst float separationDistanceSquared = separationDistance * separationDistance;\r\n\r\nconst float speedLimit = 1.;\r\n\r\nvoid main()\t{\r\n    vec3 position = texture2D( texturePosition, vTextureCoord ).xyz;\r\n    vec3 velocity = texture2D( textureVelocity, vTextureCoord ).xyz;\r\n    vec3 force = vec3(0., 0., 0.);\r\n    vec3 avgPosition = vec3(0., 0., 0.);\r\n    vec3 avgVelocity = vec3(0., 0., 0.);\r\n    vec3 separation = vec3(0., 0., 0.);\r\n    float cohesionCount = 0.;\r\n    float alignmentCount = 0.;\r\n    \r\n    for ( float s = 0.5; s < textureSize.x; s++ ) {\r\n        for ( float t = 0.5; t < textureSize.y; t++ ) {\r\n            vec2 ref = vec2(s, t) / textureSize;\r\n            vec3 otherPos = texture2D( texturePosition, ref ).xyz;\r\n            vec3 toOther = otherPos - position;\r\n            float distSquared = dot(toOther, toOther);\r\n            if (position == otherPos) continue;\r\n\r\n            if (distSquared < separationDistanceSquared) {\r\n                // separation\r\n                float coeff = 1. - sqrt(distSquared) / separationDistance;\r\n                separation -= toOther * coeff;\r\n            } else if (distSquared < alignmentDistanceSquared) {\r\n                // alignment\r\n                avgVelocity += texture2D( textureVelocity, ref ).xyz;\r\n                alignmentCount += 1.;\r\n            } else if (distSquared < cohesionDistanceSquared) {\r\n                // cohesion\r\n                avgPosition += otherPos;\r\n                cohesionCount += 1.;\r\n            }\r\n        }\r\n    }\r\n    // cohesion\r\n    if (cohesionCount > 0.1) {\r\n        avgPosition /= cohesionCount;\r\n        avgPosition -= position;\r\n        force += avgPosition * cohesionStrength;\r\n    }\r\n    // alignment\r\n    if (alignmentCount > 0.1) {\r\n        avgVelocity /= alignmentCount;\r\n        avgVelocity -= velocity;\r\n        force += avgVelocity * alignmentStrength;\r\n    }\r\n    // separation\r\n    force += separation * separationStrength;\r\n\r\n    // update velocity\r\n    velocity += force * dt;\r\n    float speed = length(velocity);\r\n    velocity *= speedLimit / speed;\r\n    gl_FragColor = vec4(velocity, 1.);\r\n}",n);r.createVisualizationProgram(),r.setPostionAndVelocityProgram(o,a),requestAnimationFrame((function t(){e.run(),r.run(),requestAnimationFrame(t)}))}()})()})();